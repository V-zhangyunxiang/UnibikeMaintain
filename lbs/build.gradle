def debugging = false

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (debugging.toBoolean()) {
            manifestPlaceholders = [GAODE_API_KEY: "a3f93b6838a7d21fe170bc4a56062bd0"]
        } else {
            manifestPlaceholders = [GAODE_API_KEY: "a3f93b6838a7d21fe170bc4a56062bd0"]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile project(':config')
    compile project(':lighter')
    compile project(':guavalite')

    testCompile 'junit:junit:4.12'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Java 8 Hack
    compile "com.annimon:stream:$rootProject.streamVersion"

    // Rx
    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"
}
